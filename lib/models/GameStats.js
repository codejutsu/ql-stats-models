var Promise = require('bluebird'),
    mongoose = require('mongoose'),
    Schema = mongoose.Schema,
    gameStatsSchemaDefinition = require('./schemas/stats-schema-definition');

/*
    My goal with this schema is to have the api consumer create a game stats document from the quake live event data,
    and use the game stats document to increment dependent counter like player och global overall stats.

    Create game stats object,
    use the game stats id object as reference to it's parent document
    update parent document

 */

module.exports = function (db) {

    var GameStats,
        gameStatsSchema = new Schema(gameStatsSchemaDefinition);

    gameStatsSchema.statics.updateWith = function (source, targets) {

        var query = {
                _id: {
                    $in: targets.map(function (t){
                        return t._id;
                    })
                }
            },
            update = {
                $inc: {
                    count: 1,
                    play_time: source.play_time,
                    win: source.win,
                    lose: source.lose,
                    quit: source.quit,
                    kills: source.kills,
                    deaths: source.deaths,
                    damage_dealt: source.damage_dealt,
                    damage_taken: source.damage_taken,
                    accuracy: source.accuracy,
                    assists: source.assists,
                    captures: source.captures,
                    combokill: source.combokill,
                    defends: source.defends,
                    excellent: source.excellent,
                    firstfrag: source.firstfrag,
                    headshot: source.headshot,
                    humiliation: source.humiliation,
                    impressive: source.impressive,
                    midair: source.midair,
                    perfect: source.perfect,
                    perforated: source.perforated,
                    quadgod: source.quadgod,
                    rampage: source.rampage,
                    revenge: source.revenge,
                    ammo: source.ammo,
                    armor: source.armor,
                    armor_regen: source.armor_regen,
                    battlesuit: source.battlesuit,
                    doubler: source.doubler,
                    flight: source.flight,
                    green_armor: source.green_armor,
                    guard: source.guard,
                    haste: source.haste,
                    health: source.health,
                    invis: source.invis,
                    invulnerability: source.invulnerability,
                    kamikaze: source.kamikaze,
                    medkit: source.medkit,
                    mega_health: source.mega_health,
                    other_holdable: source.other_holdable,
                    other_powerup: source.other_powerup,
                    portal: source.portal,
                    quad: source.quad,
                    red_armor: source.red_armor,
                    regen: source.regen,
                    scout: source.scout,
                    teleporter: source.teleporter,
                    yellow_armor: source.yellow_armor,
                    gauntlet_d: source.gauntlet_d,
                    gauntlet_dg: source.gauntlet_dg,
                    gauntlet_dr: source.gauntlet_dr,
                    gauntlet_h: source.gauntlet_h,
                    gauntlet_k: source.gauntlet_k,
                    gauntlet_p: source.gauntlet_p,
                    gauntlet_s: source.gauntlet_s,
                    gauntlet_t: source.gauntlet_t,
                    rocket_p: source.rocket_p,
                    rocket_k: source.rocket_k,
                    rocket_d: source.rocket_d,
                    rocket_s: source.rocket_s,
                    rocket_h: source.rocket_h,
                    rocket_t: source.rocket_t,
                    rocket_dg: source.rocket_dg,
                    rocket_dr: source.rocket_dr,
                    lightning_p: source.lightning_p,
                    lightning_k: source.lightning_k,
                    lightning_d: source.lightning_d,
                    lightning_s: source.lightning_s,
                    lightning_h: source.lightning_h,
                    lightning_t: source.lightning_t,
                    lightning_dg: source.lightning_dg,
                    lightning_dr: source.lightning_dr,
                    railgun_p: source.railgun_p,
                    railgun_k: source.railgun_k,
                    railgun_d: source.railgun_d,
                    railgun_s: source.railgun_s,
                    railgun_h: source.railgun_h,
                    railgun_t: source.railgun_t,
                    railgun_dg: source.railgun_dg,
                    railgun_dr: source.railgun_dr,
                    plasma_p: source.plasma_p,
                    plasma_k: source.plasma_k,
                    plasma_d: source.plasma_d,
                    plasma_s: source.plasma_s,
                    plasma_h: source.plasma_h,
                    plasma_t: source.plasma_t,
                    plasma_dg: source.plasma_dg,
                    plasma_dr: source.plasma_dr,
                    grenade_p: source.grenade_p,
                    grenade_k: source.grenade_k,
                    grenade_d: source.grenade_d,
                    grenade_s: source.grenade_s,
                    grenade_h: source.grenade_h,
                    grenade_t: source.grenade_t,
                    grenade_dg: source.grenade_dg,
                    grenade_dr: source.grenade_dr,
                    bfg_p: source.bfg_p,
                    bfg_k: source.bfg_k,
                    bfg_d: source.bfg_d,
                    bfg_s: source.bfg_s,
                    bfg_h: source.bfg_h,
                    bfg_t: source.bfg_t,
                    bfg_dg: source.bfg_dg,
                    bfg_dr: source.bfg_dr,
                    hmg_p: source.hmg_p,
                    hmg_k: source.hmg_k,
                    hmg_d: source.hmg_d,
                    hmg_s: source.hmg_s,
                    hmg_h: source.hmg_h,
                    hmg_t: source.hmg_t,
                    hmg_dg: source.hmg_dg,
                    hmg_dr: source.hmg_dr,
                    chaingun_p: source.chaingun_p,
                    chaingun_k: source.chaingun_k,
                    chaingun_d: source.chaingun_d,
                    chaingun_s: source.chaingun_s,
                    chaingun_h: source.chaingun_h,
                    chaingun_t: source.chaingun_t,
                    chaingun_dg: source.chaingun_dg,
                    chaingun_dr: source.chaingun_dr,
                    nailgun_p: source.nailgun_p,
                    nailgun_k: source.nailgun_k,
                    nailgun_d: source.nailgun_d,
                    nailgun_s: source.nailgun_s,
                    nailgun_h: source.nailgun_h,
                    nailgun_t: source.nailgun_t,
                    nailgun_dg: source.nailgun_dg,
                    nailgun_dr: source.nailgun_dr,
                    proximitymine_p: source.proximitymine_p,
                    proximitymine_k: source.proximitymine_k,
                    proximitymine_d: source.proximitymine_d,
                    proximitymine_s: source.proximitymine_s,
                    proximitymine_h: source.proximitymine_h,
                    proximitymine_t: source.proximitymine_t,
                    proximitymine_dg: source.proximitymine_dg,
                    proximitymine_dr: source.proximitymine_dr,
                    shotgun_p: source.shotgun_p,
                    shotgun_k: source.shotgun_k,
                    shotgun_d: source.shotgun_d,
                    shotgun_s: source.shotgun_s,
                    shotgun_h: source.shotgun_h,
                    shotgun_t: source.shotgun_t,
                    shotgun_dg: source.shotgun_dg,
                    shotgun_dr: source.shotgun_dr,
                    other_p: source.other_p,
                    other_k: source.other_k,
                    other_d: source.other_d,
                    other_s: source.other_s,
                    other_h: source.other_h,
                    other_t: source.other_t,
                    other_dg: source.other_dg,
                    other_dr: source.other_dr
                }
            };

        return GameStats.update(query, update, { multi: true })
    };

    gameStatsSchema.statics.createWithMatchStarted = function (event) {
        return new GameStats({
            // general
            play_time: event.DATA.PLAY_TIME,
            win: event.DATA.WIN,
            quit: event.DATA.QUIT,
            lose: event.DATA.LOSE,
            kills: event.DATA.KILLS,
            deaths: event.DATA.DEATHS,
            damage_dealt: event.DATA.DAMAGE.DEALT,
            damage_taken: event.DATA.DAMAGE.TAKEN,
            max_streak: event.DATA.MAX_STREAK,
            // medals
            accuracy: event.DATA.MEDALS.ACCURACY,
            assists: event.DATA.MEDALS.ASSISTS,
            captures: event.DATA.MEDALS.CAPTURES,
            combokill: event.DATA.MEDALS.COMBOKILL,
            defends: event.DATA.MEDALS.DEFENDS,
            excellent: event.DATA.MEDALS.EXCELLENT,
            firstfrag: event.DATA.MEDALS.FIRSTFRAG,
            headshot: event.DATA.MEDALS.HEADSHOT,
            humiliation: event.DATA.MEDALS.HUMILIATION,
            impressive: event.DATA.MEDALS.IMPRESSIVE,
            midair: event.DATA.MEDALS.MIDAIR,
            perfect: event.DATA.MEDALS.PERFECT,
            perforated: event.DATA.MEDALS.PERFORATED,
            quadgod: event.DATA.MEDALS.QUADGOD,
            rampage: event.DATA.MEDALS.RAMPAGE,
            revenge: event.DATA.MEDALS.REVENGE,

            // pickups
            ammo: event.DATA.PICKUPS.AMMO,
            armor: event.DATA.PICKUPS.ARMOR,
            armor_regen: event.DATA.PICKUPS.ARMOR_REGEN,
            battlesuit: event.DATA.PICKUPS.BATTLESUIT,
            doubler: event.DATA.PICKUPS.DOUBLER,
            flight: event.DATA.PICKUPS.FLIGHT,
            green_armor: event.DATA.PICKUPS.GREEN_ARMOR,
            guard: event.DATA.PICKUPS.GUARD,
            haste: event.DATA.PICKUPS.HASTE,
            health: event.DATA.PICKUPS.HEALTH,
            invis: event.DATA.PICKUPS.INVIS,
            invulnerability: event.DATA.PICKUPS.INVULNERABILITY,
            kamikaze: event.DATA.PICKUPS.KAMIKAZE,
            medkit: event.DATA.PICKUPS.MEDKIT,
            mega_health: event.DATA.PICKUPS.MEGA_HEALTH,
            other_holdable: event.DATA.PICKUPS.OTHER_HOLDABLE,
            other_powerup: event.DATA.PICKUPS.OTHER_POWERUP,
            portal: event.DATA.PICKUPS.PORTAL,
            quad: event.DATA.PICKUPS.QUAD,
            red_armor: event.DATA.PICKUPS.RED_ARMOR,
            regen: event.DATA.PICKUPS.REGEN,
            scout: event.DATA.PICKUPS.SCOUT,
            teleporter: event.DATA.PICKUPS.TELEPORTER,
            yellow_armor: event.DATA.PICKUPS.YELLOW_ARMOR,

            // weapons
            gauntlet_d: event.DATA.WEAPONS.GAUNTLET.D,
            gauntlet_dg: event.DATA.WEAPONS.GAUNTLET.DG,
            gauntlet_dr: event.DATA.WEAPONS.GAUNTLET.DR,
            gauntlet_h: event.DATA.WEAPONS.GAUNTLET.H,
            gauntlet_k: event.DATA.WEAPONS.GAUNTLET.K,
            gauntlet_p: event.DATA.WEAPONS.GAUNTLET.P,
            gauntlet_s: event.DATA.WEAPONS.GAUNTLET.S,
            gauntlet_t: event.DATA.WEAPONS.GAUNTLET.T,

            rocket_p: event.DATA.WEAPONS.ROCKET.P,
            rocket_k: event.DATA.WEAPONS.ROCKET.K,
            rocket_d: event.DATA.WEAPONS.ROCKET.D,
            rocket_s: event.DATA.WEAPONS.ROCKET.S,
            rocket_h: event.DATA.WEAPONS.ROCKET.H,
            rocket_t: event.DATA.WEAPONS.ROCKET.T,
            rocket_dg: event.DATA.WEAPONS.ROCKET.DG,
            rocket_dr: event.DATA.WEAPONS.ROCKET.DR,

            lightning_p: event.DATA.WEAPONS.LIGHTNING.P,
            lightning_k: event.DATA.WEAPONS.LIGHTNING.K,
            lightning_d: event.DATA.WEAPONS.LIGHTNING.D,
            lightning_s: event.DATA.WEAPONS.LIGHTNING.S,
            lightning_h: event.DATA.WEAPONS.LIGHTNING.H,
            lightning_t: event.DATA.WEAPONS.LIGHTNING.T,
            lightning_dg: event.DATA.WEAPONS.LIGHTNING.DG,
            lightning_dr: event.DATA.WEAPONS.LIGHTNING.DR,

            railgun_p: event.DATA.WEAPONS.RAILGUN.P,
            railgun_k: event.DATA.WEAPONS.RAILGUN.K,
            railgun_d: event.DATA.WEAPONS.RAILGUN.D,
            railgun_s: event.DATA.WEAPONS.RAILGUN.S,
            railgun_h: event.DATA.WEAPONS.RAILGUN.H,
            railgun_t: event.DATA.WEAPONS.RAILGUN.T,
            railgun_dg: event.DATA.WEAPONS.RAILGUN.DG,
            railgun_dr: event.DATA.WEAPONS.RAILGUN.DR,

            plasma_p: event.DATA.WEAPONS.PLASMA.P,
            plasma_k: event.DATA.WEAPONS.PLASMA.K,
            plasma_d: event.DATA.WEAPONS.PLASMA.D,
            plasma_s: event.DATA.WEAPONS.PLASMA.S,
            plasma_h: event.DATA.WEAPONS.PLASMA.H,
            plasma_t: event.DATA.WEAPONS.PLASMA.T,
            plasma_dg: event.DATA.WEAPONS.PLASMA.DG,
            plasma_dr: event.DATA.WEAPONS.PLASMA.DR,

            grenade_p: event.DATA.WEAPONS.GRENADE.P,
            grenade_k: event.DATA.WEAPONS.GRENADE.K,
            grenade_d: event.DATA.WEAPONS.GRENADE.D,
            grenade_s: event.DATA.WEAPONS.GRENADE.S,
            grenade_h: event.DATA.WEAPONS.GRENADE.H,
            grenade_t: event.DATA.WEAPONS.GRENADE.T,
            grenade_dg: event.DATA.WEAPONS.GRENADE.DG,
            grenade_dr: event.DATA.WEAPONS.GRENADE.DR,

            bfg_p: event.DATA.WEAPONS.BFG.P,
            bfg_k: event.DATA.WEAPONS.BFG.K,
            bfg_d: event.DATA.WEAPONS.BFG.D,
            bfg_s: event.DATA.WEAPONS.BFG.S,
            bfg_h: event.DATA.WEAPONS.BFG.H,
            bfg_t: event.DATA.WEAPONS.BFG.T,
            bfg_dg: event.DATA.WEAPONS.BFG.DG,
            bfg_dr: event.DATA.WEAPONS.BFG.DR,

            hmg_p: event.DATA.WEAPONS.HMG.P,
            hmg_k: event.DATA.WEAPONS.HMG.K,
            hmg_d: event.DATA.WEAPONS.HMG.D,
            hmg_s: event.DATA.WEAPONS.HMG.S,
            hmg_h: event.DATA.WEAPONS.HMG.H,
            hmg_t: event.DATA.WEAPONS.HMG.T,
            hmg_dg: event.DATA.WEAPONS.HMG.DG,
            hmg_dr: event.DATA.WEAPONS.HMG.DR,

            chaingun_p: event.DATA.WEAPONS.CHAINGUN.P,
            chaingun_k: event.DATA.WEAPONS.CHAINGUN.K,
            chaingun_d: event.DATA.WEAPONS.CHAINGUN.D,
            chaingun_s: event.DATA.WEAPONS.CHAINGUN.S,
            chaingun_h: event.DATA.WEAPONS.CHAINGUN.H,
            chaingun_t: event.DATA.WEAPONS.CHAINGUN.T,
            chaingun_dg: event.DATA.WEAPONS.CHAINGUN.DG,
            chaingun_dr: event.DATA.WEAPONS.CHAINGUN.DR,

            nailgun_p: event.DATA.WEAPONS.NAILGUN.P,
            nailgun_k: event.DATA.WEAPONS.NAILGUN.K,
            nailgun_d: event.DATA.WEAPONS.NAILGUN.D,
            nailgun_s: event.DATA.WEAPONS.NAILGUN.S,
            nailgun_h: event.DATA.WEAPONS.NAILGUN.H,
            nailgun_t: event.DATA.WEAPONS.NAILGUN.T,
            nailgun_dg: event.DATA.WEAPONS.NAILGUN.DG,
            nailgun_dr: event.DATA.WEAPONS.NAILGUN.DR,

            proximitymine_p: event.DATA.WEAPONS.PROXMINE.P,
            proximitymine_k: event.DATA.WEAPONS.PROXMINE.K,
            proximitymine_d: event.DATA.WEAPONS.PROXMINE.D,
            proximitymine_s: event.DATA.WEAPONS.PROXMINE.S,
            proximitymine_h: event.DATA.WEAPONS.PROXMINE.H,
            proximitymine_t: event.DATA.WEAPONS.PROXMINE.T,
            proximitymine_dg: event.DATA.WEAPONS.PROXMINE.DG,
            proximitymine_dr: event.DATA.WEAPONS.PROXMINE.DR,

            shotgun_p: event.DATA.WEAPONS.SHOTGUN.P,
            shotgun_k: event.DATA.WEAPONS.SHOTGUN.K,
            shotgun_d: event.DATA.WEAPONS.SHOTGUN.D,
            shotgun_s: event.DATA.WEAPONS.SHOTGUN.S,
            shotgun_h: event.DATA.WEAPONS.SHOTGUN.H,
            shotgun_t: event.DATA.WEAPONS.SHOTGUN.T,
            shotgun_dg: event.DATA.WEAPONS.SHOTGUN.DG,
            shotgun_dr: event.DATA.WEAPONS.SHOTGUN.DR,

            other_p: event.DATA.WEAPONS.OTHER_WEAPON.P,
            other_k: event.DATA.WEAPONS.OTHER_WEAPON.K,
            other_d: event.DATA.WEAPONS.OTHER_WEAPON.D,
            other_s: event.DATA.WEAPONS.OTHER_WEAPON.S,
            other_h: event.DATA.WEAPONS.OTHER_WEAPON.H,
            other_t: event.DATA.WEAPONS.OTHER_WEAPON.T,
            other_dg: event.DATA.WEAPONS.OTHER_WEAPON.DG,
            other_dr: event.DATA.WEAPONS.OTHER_WEAPON.DR
        }).save()
    };

    gameStatsSchema.methods.incrementWithGameStats = function (gameStats) {

        var incrementQuery = {
            $inc: {
                // general
                count: 1,
                play_time: gameStats.play_time,
                win: gameStats.win,
                quit: gameStats.quit,
                lose: gameStats.lose,
                kills: gameStats.kills,
                deaths: gameStats.deaths,
                damage_dealt: gameStats.damage_dealt,
                damage_taken: gameStats.damage_taken,
                max_streak: gameStats.max_streak,
                //
                accuracy: gameStats.accuracy,
                assists: gameStats.assists,
                captures: gameStats.captures,
                combokill: gameStats.combokill,
                defends: gameStats.defends,
                excellent: gameStats.excellent,
                firstfrag: gameStats.firstfrag,
                headshot: gameStats.headshot,
                humiliation: gameStats.humiliation,
                impressive: gameStats.impressive,
                midair: gameStats.midair,
                perfect: gameStats.perfect,
                perforated: gameStats.perforated,
                quadgod: gameStats.quadgod,
                rampage: gameStats.rampage,
                revenge: gameStats.revenge,

                // 				ammo: gameStats.ammo,
                armor: gameStats.armor,
                armor_regen: gameStats.armor_regen,
                battlesuit: gameStats.battlesuit,
                doubler: gameStats.doubler,
                flight: gameStats.flight,
                green_armor: gameStats.green_armor,
                guard: gameStats.guard,
                haste: gameStats.haste,
                health: gameStats.health,
                invis: gameStats.invis,
                invulnerability: gameStats.invulnerability,
                kamikaze: gameStats.kamikaze,
                medkit: gameStats.medkit,
                mega_health: gameStats.mega_health,
                other_holdable: gameStats.other_holdable,
                other_powerup: gameStats.other_powerup,
                portal: gameStats.portal,
                quad: gameStats.quad,
                red_armor: gameStats.red_armor,
                regen: gameStats.regen,
                scout: gameStats.scout,
                teleporter: gameStats.teleporter,
                yellow_armor: gameStats.yellow_armor,

                gauntlet_d: gameStats.gauntlet_d,
                gauntlet_dg: gameStats.gauntlet_dg,
                gauntlet_dr: gameStats.gauntlet_dr,
                gauntlet_h: gameStats.gauntlet_h,
                gauntlet_k: gameStats.gauntlet_k,
                gauntlet_p: gameStats.gauntlet_p,
                gauntlet_s: gameStats.gauntlet_s,
                gauntlet_t: gameStats.gauntlet_t,

                rocket_p: gameStats.rocket_p,
                rocket_k: gameStats.rocket_k,
                rocket_d: gameStats.rocket_d,
                rocket_s: gameStats.rocket_s,
                rocket_h: gameStats.rocket_h,
                rocket_t: gameStats.rocket_t,
                rocket_dg: gameStats.rocket_dg,
                rocket_dr: gameStats.rocket_dr,

                lightning_p: gameStats.lightning_p,
                lightning_k: gameStats.lightning_k,
                lightning_d: gameStats.lightning_d,
                lightning_s: gameStats.lightning_s,
                lightning_h: gameStats.lightning_h,
                lightning_t: gameStats.lightning_t,
                lightning_dg: gameStats.lightning_dg,
                lightning_dr: gameStats.lightning_dr,

                railgun_p: gameStats.railgun_p,
                railgun_k: gameStats.railgun_k,
                railgun_d: gameStats.railgun_d,
                railgun_s: gameStats.railgun_s,
                railgun_h: gameStats.railgun_h,
                railgun_t: gameStats.railgun_t,
                railgun_dg: gameStats.railgun_dg,
                railgun_dr: gameStats.railgun_dr,

                plasma_p: gameStats.plasma_p,
                plasma_k: gameStats.plasma_k,
                plasma_d: gameStats.plasma_d,
                plasma_s: gameStats.plasma_s,
                plasma_h: gameStats.plasma_h,
                plasma_t: gameStats.plasma_t,
                plasma_dg: gameStats.plasma_dg,
                plasma_dr: gameStats.plasma_dr,

                grenade_p: gameStats.grenade_p,
                grenade_k: gameStats.grenade_k,
                grenade_d: gameStats.grenade_d,
                grenade_s: gameStats.grenade_s,
                grenade_h: gameStats.grenade_h,
                grenade_t: gameStats.grenade_t,
                grenade_dg: gameStats.grenade_dg,
                grenade_dr: gameStats.grenade_dr,

                bfg_p: gameStats.bfg_p,
                bfg_k: gameStats.bfg_k,
                bfg_d: gameStats.bfg_d,
                bfg_s: gameStats.bfg_s,
                bfg_h: gameStats.bfg_h,
                bfg_t: gameStats.bfg_t,
                bfg_dg: gameStats.bfg_dg,
                bfg_dr: gameStats.bfg_dr,

                hmg_p: gameStats.hmg_p,
                hmg_k: gameStats.hmg_k,
                hmg_d: gameStats.hmg_d,
                hmg_s: gameStats.hmg_s,
                hmg_h: gameStats.hmg_h,
                hmg_t: gameStats.hmg_t,
                hmg_dg: gameStats.hmg_dg,
                hmg_dr: gameStats.hmg_dr,

                chaingun_p: gameStats.chaingun_p,
                chaingun_k: gameStats.chaingun_k,
                chaingun_d: gameStats.chaingun_d,
                chaingun_s: gameStats.chaingun_s,
                chaingun_h: gameStats.chaingun_h,
                chaingun_t: gameStats.chaingun_t,
                chaingun_dg: gameStats.chaingun_dg,
                chaingun_dr: gameStats.chaingun_dr,

                nailgun_p: gameStats.nailgun_p,
                nailgun_k: gameStats.nailgun_k,
                nailgun_d: gameStats.nailgun_d,
                nailgun_s: gameStats.nailgun_s,
                nailgun_h: gameStats.nailgun_h,
                nailgun_t: gameStats.nailgun_t,
                nailgun_dg: gameStats.nailgun_dg,
                nailgun_dr: gameStats.nailgun_dr,

                proximitymine_p: gameStats.proximitymine_p,
                proximitymine_k: gameStats.proximitymine_k,
                proximitymine_d: gameStats.proximitymine_d,
                proximitymine_s: gameStats.proximitymine_s,
                proximitymine_h: gameStats.proximitymine_h,
                proximitymine_t: gameStats.proximitymine_t,
                proximitymine_dg: gameStats.proximitymine_dg,
                proximitymine_dr: gameStats.proximitymine_dr,

                shotgun_p: gameStats.shotgun_p,
                shotgun_k: gameStats.shotgun_k,
                shotgun_d: gameStats.shotgun_d,
                shotgun_s: gameStats.shotgun_s,
                shotgun_h: gameStats.shotgun_h,
                shotgun_t: gameStats.shotgun_t,
                shotgun_dg: gameStats.shotgun_dg,
                shotgun_dr: gameStats.shotgun_dr,

                other_p: gameStats.other_p,
                other_k: gameStats.other_k,
                other_d: gameStats.other_d,
                other_s: gameStats.other_s,
                other_h: gameStats.other_h,
                other_t: gameStats.other_t,
                other_dg: gameStats.other_dg,
                other_dr: gameStats.other_dr
            }
        };
        return this.update(incrementQuery);
    };

    GameStats = db.model('GameStats', gameStatsSchema);

    return GameStats;

};

